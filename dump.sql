--
-- PostgreSQL database dump
--

\restrict bxV0qu5Xa9RhiC2uh5A38gzF3bDtUeLW5CU0aAXviavdbEHfTstEFK9f7km6Rgm

-- Dumped from database version 17.6
-- Dumped by pg_dump version 17.6

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: update_modified_at(); Type: FUNCTION; Schema: public; Owner: django_user
--

CREATE FUNCTION public.update_modified_at() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    NEW.updated_at = CURRENT_TIMESTAMP;
    RETURN NEW;
END;
$$;


ALTER FUNCTION public.update_modified_at() OWNER TO django_user;

--
-- Name: validate_experience_dates(); Type: FUNCTION; Schema: public; Owner: django_user
--

CREATE FUNCTION public.validate_experience_dates() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    IF NEW.end_date IS NOT NULL AND NEW.start_date > NEW.end_date THEN
        RAISE EXCEPTION 'Start date cannot be later than end date';
    END IF;
    RETURN NEW;
END;
$$;


ALTER FUNCTION public.validate_experience_dates() OWNER TO django_user;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: auth_group; Type: TABLE; Schema: public; Owner: django_user
--

CREATE TABLE public.auth_group (
    id integer NOT NULL,
    name character varying(150) NOT NULL
);


ALTER TABLE public.auth_group OWNER TO django_user;

--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: public; Owner: django_user
--

ALTER TABLE public.auth_group ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group_permissions; Type: TABLE; Schema: public; Owner: django_user
--

CREATE TABLE public.auth_group_permissions (
    id bigint NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_group_permissions OWNER TO django_user;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: django_user
--

ALTER TABLE public.auth_group_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_permission; Type: TABLE; Schema: public; Owner: django_user
--

CREATE TABLE public.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


ALTER TABLE public.auth_permission OWNER TO django_user;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: django_user
--

ALTER TABLE public.auth_permission ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_permission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user; Type: TABLE; Schema: public; Owner: django_user
--

CREATE TABLE public.auth_user (
    id integer NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) NOT NULL,
    first_name character varying(150) NOT NULL,
    last_name character varying(150) NOT NULL,
    email character varying(254) NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL
);


ALTER TABLE public.auth_user OWNER TO django_user;

--
-- Name: auth_user_groups; Type: TABLE; Schema: public; Owner: django_user
--

CREATE TABLE public.auth_user_groups (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.auth_user_groups OWNER TO django_user;

--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: django_user
--

ALTER TABLE public.auth_user_groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_id_seq; Type: SEQUENCE; Schema: public; Owner: django_user
--

ALTER TABLE public.auth_user ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_user_permissions; Type: TABLE; Schema: public; Owner: django_user
--

CREATE TABLE public.auth_user_user_permissions (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_user_user_permissions OWNER TO django_user;

--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: django_user
--

ALTER TABLE public.auth_user_user_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_user_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: seq_award; Type: SEQUENCE; Schema: public; Owner: django_user
--

CREATE SEQUENCE public.seq_award
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.seq_award OWNER TO django_user;

--
-- Name: awards; Type: TABLE; Schema: public; Owner: django_user
--

CREATE TABLE public.awards (
    id integer DEFAULT nextval('public.seq_award'::regclass) NOT NULL,
    teacher_id integer NOT NULL,
    name character varying(255) NOT NULL,
    organization character varying(255) NOT NULL,
    received_date date NOT NULL,
    level character varying(50),
    description text,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT awards_level_check CHECK (((level)::text = ANY ((ARRAY['State'::character varying, 'Regional'::character varying, 'Departmental'::character varying, 'Other'::character varying])::text[])))
);


ALTER TABLE public.awards OWNER TO django_user;

--
-- Name: seq_coursework; Type: SEQUENCE; Schema: public; Owner: django_user
--

CREATE SEQUENCE public.seq_coursework
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.seq_coursework OWNER TO django_user;

--
-- Name: courseworks; Type: TABLE; Schema: public; Owner: django_user
--

CREATE TABLE public.courseworks (
    id integer DEFAULT nextval('public.seq_coursework'::regclass) NOT NULL,
    student_id integer NOT NULL,
    discipline_id integer NOT NULL,
    teacher_id integer NOT NULL,
    topic character varying(500) NOT NULL,
    year integer NOT NULL,
    grade integer,
    submission_date date,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT courseworks_grade_check CHECK (((grade >= 2) AND (grade <= 5)))
);


ALTER TABLE public.courseworks OWNER TO django_user;

--
-- Name: seq_diploma; Type: SEQUENCE; Schema: public; Owner: django_user
--

CREATE SEQUENCE public.seq_diploma
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.seq_diploma OWNER TO django_user;

--
-- Name: diplomas; Type: TABLE; Schema: public; Owner: django_user
--

CREATE TABLE public.diplomas (
    id integer DEFAULT nextval('public.seq_diploma'::regclass) NOT NULL,
    student_id integer NOT NULL,
    supervisor_id integer NOT NULL,
    topic character varying(500) NOT NULL,
    year integer NOT NULL,
    grade integer,
    abstract text,
    defense_date date,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT diplomas_grade_check CHECK (((grade >= 2) AND (grade <= 5)))
);


ALTER TABLE public.diplomas OWNER TO django_user;

--
-- Name: seq_discipline; Type: SEQUENCE; Schema: public; Owner: django_user
--

CREATE SEQUENCE public.seq_discipline
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.seq_discipline OWNER TO django_user;

--
-- Name: disciplines; Type: TABLE; Schema: public; Owner: django_user
--

CREATE TABLE public.disciplines (
    id integer DEFAULT nextval('public.seq_discipline'::regclass) NOT NULL,
    name character varying(255) NOT NULL,
    cycle_code character varying(50),
    lecture_hours integer DEFAULT 0,
    practice_hours integer DEFAULT 0,
    lab_hours integer DEFAULT 0,
    assessment_type character varying(50),
    description text,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT disciplines_assessment_type_check CHECK (((assessment_type)::text = ANY ((ARRAY['Exam'::character varying, 'Credit'::character varying, 'Coursework'::character varying, 'Differentiated credit'::character varying])::text[])))
);


ALTER TABLE public.disciplines OWNER TO django_user;

--
-- Name: django_admin_log; Type: TABLE; Schema: public; Owner: django_user
--

CREATE TABLE public.django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id integer NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


ALTER TABLE public.django_admin_log OWNER TO django_user;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE; Schema: public; Owner: django_user
--

ALTER TABLE public.django_admin_log ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_admin_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_content_type; Type: TABLE; Schema: public; Owner: django_user
--

CREATE TABLE public.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


ALTER TABLE public.django_content_type OWNER TO django_user;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: public; Owner: django_user
--

ALTER TABLE public.django_content_type ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_content_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_migrations; Type: TABLE; Schema: public; Owner: django_user
--

CREATE TABLE public.django_migrations (
    id bigint NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


ALTER TABLE public.django_migrations OWNER TO django_user;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: django_user
--

ALTER TABLE public.django_migrations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_session; Type: TABLE; Schema: public; Owner: django_user
--

CREATE TABLE public.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


ALTER TABLE public.django_session OWNER TO django_user;

--
-- Name: seq_education; Type: SEQUENCE; Schema: public; Owner: django_user
--

CREATE SEQUENCE public.seq_education
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.seq_education OWNER TO django_user;

--
-- Name: education; Type: TABLE; Schema: public; Owner: django_user
--

CREATE TABLE public.education (
    id integer DEFAULT nextval('public.seq_education'::regclass) NOT NULL,
    teacher_id integer NOT NULL,
    institution character varying(255) NOT NULL,
    specialization character varying(255) NOT NULL,
    degree character varying(100) NOT NULL,
    start_date date NOT NULL,
    end_date date,
    education_type character varying(50),
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT education_education_type_check CHECK (((education_type)::text = ANY ((ARRAY['Basic'::character varying, 'Additional'::character varying])::text[])))
);


ALTER TABLE public.education OWNER TO django_user;

--
-- Name: seq_experience; Type: SEQUENCE; Schema: public; Owner: django_user
--

CREATE SEQUENCE public.seq_experience
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.seq_experience OWNER TO django_user;

--
-- Name: experience; Type: TABLE; Schema: public; Owner: django_user
--

CREATE TABLE public.experience (
    id integer DEFAULT nextval('public.seq_experience'::regclass) NOT NULL,
    teacher_id integer NOT NULL,
    organization character varying(255) NOT NULL,
    "position" character varying(255) NOT NULL,
    start_date date NOT NULL,
    end_date date,
    experience_type character varying(50) NOT NULL,
    description text,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT experience_experience_type_check CHECK (((experience_type)::text = ANY ((ARRAY['General'::character varying, 'Education'::character varying, 'College'::character varying])::text[])))
);


ALTER TABLE public.experience OWNER TO django_user;

--
-- Name: seq_file; Type: SEQUENCE; Schema: public; Owner: django_user
--

CREATE SEQUENCE public.seq_file
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.seq_file OWNER TO django_user;

--
-- Name: files; Type: TABLE; Schema: public; Owner: django_user
--

CREATE TABLE public.files (
    id integer DEFAULT nextval('public.seq_file'::regclass) NOT NULL,
    object_id integer NOT NULL,
    file_name character varying(255) NOT NULL,
    file_path character varying(255) NOT NULL,
    file_type character varying(50) NOT NULL,
    file_size bigint NOT NULL,
    upload_date timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    description character varying(255),
    content_type_id integer NOT NULL,
    CONSTRAINT files_file_size_check CHECK ((file_size > 0)),
    CONSTRAINT files_file_type_check CHECK (((file_type)::text = ANY ((ARRAY['PDF'::character varying, 'JPG'::character varying, 'JPEG'::character varying, 'PNG'::character varying, 'DOC'::character varying, 'DOCX'::character varying])::text[]))),
    CONSTRAINT files_object_id_95b6785b_check CHECK ((object_id >= 0))
);


ALTER TABLE public.files OWNER TO django_user;

--
-- Name: seq_grade; Type: SEQUENCE; Schema: public; Owner: django_user
--

CREATE SEQUENCE public.seq_grade
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.seq_grade OWNER TO django_user;

--
-- Name: grades; Type: TABLE; Schema: public; Owner: django_user
--

CREATE TABLE public.grades (
    id integer DEFAULT nextval('public.seq_grade'::regclass) NOT NULL,
    student_id integer NOT NULL,
    discipline_id integer NOT NULL,
    teacher_id integer NOT NULL,
    control_type character varying(50) NOT NULL,
    grade integer,
    score numeric(4,2),
    date date NOT NULL,
    description character varying(255),
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT grades_control_type_check CHECK (((control_type)::text = ANY ((ARRAY['Current'::character varying, 'Interim'::character varying, 'Final'::character varying])::text[]))),
    CONSTRAINT grades_grade_check CHECK (((grade >= 2) AND (grade <= 5))),
    CONSTRAINT grades_score_check CHECK (((score >= (0)::numeric) AND (score <= (100)::numeric)))
);


ALTER TABLE public.grades OWNER TO django_user;

--
-- Name: seq_group; Type: SEQUENCE; Schema: public; Owner: django_user
--

CREATE SEQUENCE public.seq_group
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.seq_group OWNER TO django_user;

--
-- Name: groups; Type: TABLE; Schema: public; Owner: django_user
--

CREATE TABLE public.groups (
    id integer DEFAULT nextval('public.seq_group'::regclass) NOT NULL,
    number character varying(20) NOT NULL,
    specialty character varying(255),
    course integer,
    admission_year integer,
    description text,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT groups_admission_year_check CHECK ((admission_year > 2000)),
    CONSTRAINT groups_course_check CHECK (((course >= 1) AND (course <= 6)))
);


ALTER TABLE public.groups OWNER TO django_user;

--
-- Name: seq_knowledge_exchange; Type: SEQUENCE; Schema: public; Owner: django_user
--

CREATE SEQUENCE public.seq_knowledge_exchange
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.seq_knowledge_exchange OWNER TO django_user;

--
-- Name: knowledge_exchange; Type: TABLE; Schema: public; Owner: django_user
--

CREATE TABLE public.knowledge_exchange (
    id integer DEFAULT nextval('public.seq_knowledge_exchange'::regclass) NOT NULL,
    teacher_id integer NOT NULL,
    event_type character varying(100) NOT NULL,
    title character varying(255) NOT NULL,
    event_date date NOT NULL,
    description text,
    role character varying(100) NOT NULL,
    location character varying(255),
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT knowledge_exchange_event_type_check CHECK (((event_type)::text = ANY ((ARRAY['Conference'::character varying, 'Seminar'::character varying, 'Webinar'::character varying, 'Masterclass'::character varying, 'Publication'::character varying, 'Other'::character varying])::text[]))),
    CONSTRAINT knowledge_exchange_role_check CHECK (((role)::text = ANY ((ARRAY['Speaker'::character varying, 'Participant'::character varying, 'Organizer'::character varying, 'Moderator'::character varying])::text[])))
);


ALTER TABLE public.knowledge_exchange OWNER TO django_user;

--
-- Name: seq_olympiad; Type: SEQUENCE; Schema: public; Owner: django_user
--

CREATE SEQUENCE public.seq_olympiad
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.seq_olympiad OWNER TO django_user;

--
-- Name: olympiads; Type: TABLE; Schema: public; Owner: django_user
--

CREATE TABLE public.olympiads (
    id integer DEFAULT nextval('public.seq_olympiad'::regclass) NOT NULL,
    student_id integer NOT NULL,
    teacher_id integer,
    name character varying(255) NOT NULL,
    level character varying(50) NOT NULL,
    place integer,
    year integer NOT NULL,
    event_date date,
    description text,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT olympiads_level_check CHECK (((level)::text = ANY ((ARRAY['School'::character varying, 'College'::character varying, 'City'::character varying, 'Regional'::character varying, 'National'::character varying, 'International'::character varying])::text[]))),
    CONSTRAINT olympiads_place_check CHECK (((place >= 1) AND (place <= 3)))
);


ALTER TABLE public.olympiads OWNER TO django_user;

--
-- Name: seq_publication; Type: SEQUENCE; Schema: public; Owner: django_user
--

CREATE SEQUENCE public.seq_publication
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.seq_publication OWNER TO django_user;

--
-- Name: publications; Type: TABLE; Schema: public; Owner: django_user
--

CREATE TABLE public.publications (
    id integer DEFAULT nextval('public.seq_publication'::regclass) NOT NULL,
    teacher_id integer NOT NULL,
    title character varying(500) NOT NULL,
    type character varying(50) NOT NULL,
    publisher character varying(255),
    year integer,
    issn_isbn character varying(50),
    url character varying(500),
    description text,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT publications_type_check CHECK (((type)::text = ANY ((ARRAY['Article'::character varying, 'Textbook'::character varying, 'Monograph'::character varying, 'Manual'::character varying, 'Online course'::character varying])::text[]))),
    CONSTRAINT publications_year_check CHECK ((year > 1900))
);


ALTER TABLE public.publications OWNER TO django_user;

--
-- Name: seq_qualification; Type: SEQUENCE; Schema: public; Owner: django_user
--

CREATE SEQUENCE public.seq_qualification
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.seq_qualification OWNER TO django_user;

--
-- Name: qualification; Type: TABLE; Schema: public; Owner: django_user
--

CREATE TABLE public.qualification (
    id integer DEFAULT nextval('public.seq_qualification'::regclass) NOT NULL,
    teacher_id integer NOT NULL,
    program character varying(255) NOT NULL,
    organization character varying(255) NOT NULL,
    issue_date date NOT NULL,
    hours integer NOT NULL,
    certificate_number character varying(100),
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT qualification_hours_check CHECK ((hours > 0))
);


ALTER TABLE public.qualification OWNER TO django_user;

--
-- Name: seq_student; Type: SEQUENCE; Schema: public; Owner: django_user
--

CREATE SEQUENCE public.seq_student
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.seq_student OWNER TO django_user;

--
-- Name: seq_teacher; Type: SEQUENCE; Schema: public; Owner: django_user
--

CREATE SEQUENCE public.seq_teacher
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.seq_teacher OWNER TO django_user;

--
-- Name: seq_teaching_load; Type: SEQUENCE; Schema: public; Owner: django_user
--

CREATE SEQUENCE public.seq_teaching_load
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.seq_teaching_load OWNER TO django_user;

--
-- Name: students; Type: TABLE; Schema: public; Owner: django_user
--

CREATE TABLE public.students (
    id integer DEFAULT nextval('public.seq_student'::regclass) NOT NULL,
    last_name character varying(50) NOT NULL,
    first_name character varying(50) NOT NULL,
    middle_name character varying(50),
    record_book_number character varying(20) NOT NULL,
    group_id integer NOT NULL,
    admission_date date NOT NULL,
    dismissal_date date,
    status character varying(20) DEFAULT 'Active'::character varying,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT students_status_check CHECK (((status)::text = ANY ((ARRAY['Active'::character varying, 'Dismissed'::character varying, 'Academic'::character varying, 'Graduate'::character varying])::text[])))
);


ALTER TABLE public.students OWNER TO django_user;

--
-- Name: teacher_experience; Type: VIEW; Schema: public; Owner: django_user
--

CREATE VIEW public.teacher_experience AS
SELECT
    NULL::integer AS teacher_id,
    NULL::text AS fio,
    NULL::numeric AS general_experience,
    NULL::numeric AS education_experience,
    NULL::numeric AS college_experience;


ALTER VIEW public.teacher_experience OWNER TO django_user;

--
-- Name: teachers; Type: TABLE; Schema: public; Owner: django_user
--

CREATE TABLE public.teachers (
    id integer DEFAULT nextval('public.seq_teacher'::regclass) NOT NULL,
    last_name character varying(50) NOT NULL,
    first_name character varying(50) NOT NULL,
    middle_name character varying(50),
    birth_date date NOT NULL,
    email character varying(100),
    phone character varying(20),
    biography text,
    interests text,
    teaching_problem text,
    photo character varying(100),
    category character varying(50) DEFAULT 'No category'::character varying,
    certification_date date,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    user_id integer,
    CONSTRAINT teachers_category_check CHECK (((category)::text = ANY ((ARRAY['No category'::character varying, 'First'::character varying, 'Highest'::character varying, 'Professor'::character varying])::text[])))
);


ALTER TABLE public.teachers OWNER TO django_user;

--
-- Name: teaching_load; Type: TABLE; Schema: public; Owner: django_user
--

CREATE TABLE public.teaching_load (
    id integer DEFAULT nextval('public.seq_teaching_load'::regclass) NOT NULL,
    teacher_id integer NOT NULL,
    discipline_id integer NOT NULL,
    group_id integer NOT NULL,
    semester integer,
    year integer,
    lesson_type character varying(50) NOT NULL,
    hours integer NOT NULL,
    study_form character varying(20) DEFAULT 'Full-time'::character varying,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT teaching_load_hours_check CHECK ((hours > 0)),
    CONSTRAINT teaching_load_lesson_type_check CHECK (((lesson_type)::text = ANY ((ARRAY['Lecture'::character varying, 'Practice'::character varying, 'Lab'::character varying, 'Consultation'::character varying, 'Exam'::character varying])::text[]))),
    CONSTRAINT teaching_load_semester_check CHECK (((semester >= 1) AND (semester <= 12))),
    CONSTRAINT teaching_load_study_form_check CHECK (((study_form)::text = ANY ((ARRAY['Full-time'::character varying, 'Part-time'::character varying, 'Mixed'::character varying])::text[]))),
    CONSTRAINT teaching_load_year_check CHECK ((year > 2000))
);


ALTER TABLE public.teaching_load OWNER TO django_user;

--
-- Name: teacher_portfolio; Type: VIEW; Schema: public; Owner: django_user
--

CREATE VIEW public.teacher_portfolio AS
 SELECT id AS teacher_id,
    (((last_name)::text || ' '::text) || (first_name)::text) AS fio,
    ( SELECT count(*) AS count
           FROM public.education
          WHERE (education.teacher_id = t.id)) AS education_count,
    ( SELECT sum(EXTRACT(year FROM age((COALESCE(experience.end_date, CURRENT_DATE))::timestamp with time zone, (experience.start_date)::timestamp with time zone))) AS sum
           FROM public.experience
          WHERE ((experience.teacher_id = t.id) AND ((experience.experience_type)::text = 'General'::text))) AS general_experience_years,
    ( SELECT string_agg(DISTINCT (d.name)::text, ', '::text) AS string_agg
           FROM (public.teaching_load tl
             JOIN public.disciplines d ON ((tl.discipline_id = d.id)))
          WHERE (tl.teacher_id = t.id)) AS taught_disciplines,
    ( SELECT round(avg(grades.grade), 2) AS round
           FROM public.grades
          WHERE (grades.teacher_id = t.id)) AS student_average_grade,
    ( SELECT count(*) AS count
           FROM public.diplomas
          WHERE (diplomas.supervisor_id = t.id)) AS diploma_count,
    ( SELECT count(*) AS count
           FROM public.publications
          WHERE (publications.teacher_id = t.id)) AS publication_count,
    ( SELECT count(*) AS count
           FROM public.awards
          WHERE (awards.teacher_id = t.id)) AS award_count,
    ( SELECT count(*) AS count
           FROM public.olympiads
          WHERE ((olympiads.teacher_id = t.id) AND (olympiads.place = 1) AND ((olympiads.level)::text = ANY ((ARRAY['Regional'::character varying, 'National'::character varying])::text[])))) AS winner_count
   FROM public.teachers t;


ALTER VIEW public.teacher_portfolio OWNER TO django_user;

--
-- Name: teaching_quality; Type: VIEW; Schema: public; Owner: django_user
--

CREATE VIEW public.teaching_quality AS
SELECT
    NULL::integer AS teacher_id,
    NULL::text AS fio,
    NULL::character varying(255) AS discipline,
    NULL::character varying(20) AS group_number,
    NULL::integer AS year,
    NULL::integer AS semester,
    NULL::numeric AS average_grade,
    NULL::bigint AS grade_count,
    NULL::numeric AS percent_excellent;


ALTER VIEW public.teaching_quality OWNER TO django_user;

--
-- Data for Name: auth_group; Type: TABLE DATA; Schema: public; Owner: django_user
--

COPY public.auth_group (id, name) FROM stdin;
\.


--
-- Data for Name: auth_group_permissions; Type: TABLE DATA; Schema: public; Owner: django_user
--

COPY public.auth_group_permissions (id, group_id, permission_id) FROM stdin;
\.


--
-- Data for Name: auth_permission; Type: TABLE DATA; Schema: public; Owner: django_user
--

COPY public.auth_permission (id, name, content_type_id, codename) FROM stdin;
1	Can add log entry	1	add_logentry
2	Can change log entry	1	change_logentry
3	Can delete log entry	1	delete_logentry
4	Can view log entry	1	view_logentry
5	Can add permission	2	add_permission
6	Can change permission	2	change_permission
7	Can delete permission	2	delete_permission
8	Can view permission	2	view_permission
9	Can add group	3	add_group
10	Can change group	3	change_group
11	Can delete group	3	delete_group
12	Can view group	3	view_group
13	Can add user	4	add_user
14	Can change user	4	change_user
15	Can delete user	4	delete_user
16	Can view user	4	view_user
17	Can add content type	5	add_contenttype
18	Can change content type	5	change_contenttype
19	Can delete content type	5	delete_contenttype
20	Can view content type	5	view_contenttype
21	Can add session	6	add_session
22	Can change session	6	change_session
23	Can delete session	6	delete_session
24	Can view session	6	view_session
25	Can add Файл	7	add_file
26	Can change Файл	7	change_file
27	Can delete Файл	7	delete_file
28	Can view Файл	7	view_file
29	Can add Группа	8	add_group
30	Can change Группа	8	change_group
31	Can delete Группа	8	delete_group
32	Can view Группа	8	view_group
33	Can add Учебная нагрузка	9	add_teachingload
34	Can change Учебная нагрузка	9	change_teachingload
35	Can delete Учебная нагрузка	9	delete_teachingload
36	Can view Учебная нагрузка	9	view_teachingload
37	Can add Дисциплина	10	add_discipline
38	Can change Дисциплина	10	change_discipline
39	Can delete Дисциплина	10	delete_discipline
40	Can view Дисциплина	10	view_discipline
41	Can add Квалификация	11	add_qualification
42	Can change Квалификация	11	change_qualification
43	Can delete Квалификация	11	delete_qualification
44	Can view Квалификация	11	view_qualification
45	Can add Награда	12	add_award
46	Can change Награда	12	change_award
47	Can delete Награда	12	delete_award
48	Can view Награда	12	view_award
49	Can add Олимпиада	13	add_olympiad
50	Can change Олимпиада	13	change_olympiad
51	Can delete Олимпиада	13	delete_olympiad
52	Can view Олимпиада	13	view_olympiad
53	Can add Дипломная работа	14	add_diploma
54	Can change Дипломная работа	14	change_diploma
55	Can delete Дипломная работа	14	delete_diploma
56	Can view Дипломная работа	14	view_diploma
57	Can add Образование	15	add_education
58	Can change Образование	15	change_education
59	Can delete Образование	15	delete_education
60	Can view Образование	15	view_education
61	Can add Обмен опытом	16	add_knowledgeexchange
62	Can change Обмен опытом	16	change_knowledgeexchange
63	Can delete Обмен опытом	16	delete_knowledgeexchange
64	Can view Обмен опытом	16	view_knowledgeexchange
65	Can add Курсовая работа	17	add_coursework
66	Can change Курсовая работа	17	change_coursework
67	Can delete Курсовая работа	17	delete_coursework
68	Can view Курсовая работа	17	view_coursework
69	Can add Оценка	18	add_grade
70	Can change Оценка	18	change_grade
71	Can delete Оценка	18	delete_grade
72	Can view Оценка	18	view_grade
73	Can add Публикация	19	add_publication
74	Can change Публикация	19	change_publication
75	Can delete Публикация	19	delete_publication
76	Can view Публикация	19	view_publication
77	Can add Педагог	20	add_teacher
78	Can change Педагог	20	change_teacher
79	Can delete Педагог	20	delete_teacher
80	Can view Педагог	20	view_teacher
81	Can add Студент	21	add_student
82	Can change Студент	21	change_student
83	Can delete Студент	21	delete_student
84	Can view Студент	21	view_student
85	Can add Опыт работы	22	add_experience
86	Can change Опыт работы	22	change_experience
87	Can delete Опыт работы	22	delete_experience
88	Can view Опыт работы	22	view_experience
89	Can add Опыт педагога	23	add_teacherexperience
90	Can change Опыт педагога	23	change_teacherexperience
91	Can delete Опыт педагога	23	delete_teacherexperience
92	Can view Опыт педагога	23	view_teacherexperience
93	Can add Портфолио педагога	24	add_teacherportfolio
94	Can change Портфолио педагога	24	change_teacherportfolio
95	Can delete Портфолио педагога	24	delete_teacherportfolio
96	Can view Портфолио педагога	24	view_teacherportfolio
97	Can add Качество обучения	25	add_teachingquality
98	Can change Качество обучения	25	change_teachingquality
99	Can delete Качество обучения	25	delete_teachingquality
100	Can view Качество обучения	25	view_teachingquality
\.


--
-- Data for Name: auth_user; Type: TABLE DATA; Schema: public; Owner: django_user
--

COPY public.auth_user (id, password, last_login, is_superuser, username, first_name, last_name, email, is_staff, is_active, date_joined) FROM stdin;
2	pbkdf2_sha256$1000000$sBRPtxqOv7gjaiUOHfSILs$bM30KOZnVjEMmPrffJ5iWPXpgcT3kNaEIpOwN3jMHLA=	2025-08-21 20:16:16.150409+11	t	admin			admin@example.com	t	t	2025-08-21 19:47:09.277171+11
1	pbkdf2_sha256$1000000$9Ttbib00qxSI3GFhvXmnXU$v8onpLZeZar79/QhmbZ4i+/pmprryMMEXNcyhXDAXp8=	2025-08-25 19:27:04.754961+11	t	CA			chehonina_sa@sakhgu.ru	t	t	2025-08-20 15:22:36.49808+11
\.


--
-- Data for Name: auth_user_groups; Type: TABLE DATA; Schema: public; Owner: django_user
--

COPY public.auth_user_groups (id, user_id, group_id) FROM stdin;
\.


--
-- Data for Name: auth_user_user_permissions; Type: TABLE DATA; Schema: public; Owner: django_user
--

COPY public.auth_user_user_permissions (id, user_id, permission_id) FROM stdin;
\.


--
-- Data for Name: awards; Type: TABLE DATA; Schema: public; Owner: django_user
--

COPY public.awards (id, teacher_id, name, organization, received_date, level, description, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: courseworks; Type: TABLE DATA; Schema: public; Owner: django_user
--

COPY public.courseworks (id, student_id, discipline_id, teacher_id, topic, year, grade, submission_date, created_at) FROM stdin;
\.


--
-- Data for Name: diplomas; Type: TABLE DATA; Schema: public; Owner: django_user
--

COPY public.diplomas (id, student_id, supervisor_id, topic, year, grade, abstract, defense_date, created_at) FROM stdin;
\.


--
-- Data for Name: disciplines; Type: TABLE DATA; Schema: public; Owner: django_user
--

COPY public.disciplines (id, name, cycle_code, lecture_hours, practice_hours, lab_hours, assessment_type, description, created_at) FROM stdin;
\.


--
-- Data for Name: django_admin_log; Type: TABLE DATA; Schema: public; Owner: django_user
--

COPY public.django_admin_log (id, action_time, object_id, object_repr, action_flag, change_message, content_type_id, user_id) FROM stdin;
\.


--
-- Data for Name: django_content_type; Type: TABLE DATA; Schema: public; Owner: django_user
--

COPY public.django_content_type (id, app_label, model) FROM stdin;
1	admin	logentry
2	auth	permission
3	auth	group
4	auth	user
5	contenttypes	contenttype
6	sessions	session
7	portfolio	file
8	portfolio	group
9	portfolio	teachingload
10	portfolio	discipline
11	portfolio	qualification
12	portfolio	award
13	portfolio	olympiad
14	portfolio	diploma
15	portfolio	education
16	portfolio	knowledgeexchange
17	portfolio	coursework
18	portfolio	grade
19	portfolio	publication
20	portfolio	teacher
21	portfolio	student
22	portfolio	experience
23	portfolio	teacherexperience
24	portfolio	teacherportfolio
25	portfolio	teachingquality
\.


--
-- Data for Name: django_migrations; Type: TABLE DATA; Schema: public; Owner: django_user
--

COPY public.django_migrations (id, app, name, applied) FROM stdin;
1	contenttypes	0001_initial	2025-08-20 14:35:06.76534+11
2	auth	0001_initial	2025-08-20 14:35:06.798234+11
3	admin	0001_initial	2025-08-20 14:35:06.810194+11
4	admin	0002_logentry_remove_auto_add	2025-08-20 14:35:06.814181+11
5	admin	0003_logentry_add_action_flag_choices	2025-08-20 14:35:06.818167+11
6	contenttypes	0002_remove_content_type_name	2025-08-20 14:35:06.826141+11
7	auth	0002_alter_permission_name_max_length	2025-08-20 14:35:06.830167+11
8	auth	0003_alter_user_email_max_length	2025-08-20 14:35:06.835106+11
9	auth	0004_alter_user_username_opts	2025-08-20 14:35:06.83913+11
10	auth	0005_alter_user_last_login_null	2025-08-20 14:35:06.84313+11
11	auth	0006_require_contenttypes_0002	2025-08-20 14:35:06.844111+11
12	auth	0007_alter_validators_add_error_messages	2025-08-20 14:35:06.8481+11
13	auth	0008_alter_user_username_max_length	2025-08-20 14:35:06.854095+11
14	auth	0009_alter_user_last_name_max_length	2025-08-20 14:35:06.860063+11
15	auth	0010_alter_group_name_max_length	2025-08-20 14:35:06.865043+11
16	auth	0011_update_proxy_permissions	2025-08-20 14:35:06.868045+11
17	auth	0012_alter_user_first_name_max_length	2025-08-20 14:35:06.873017+11
18	sessions	0001_initial	2025-08-20 14:35:06.878023+11
19	portfolio	0001_initial	2025-08-20 15:16:56.738602+11
20	portfolio	0002_remove_file_object_type_file_content_type_and_more	2025-08-21 16:06:53.908852+11
21	portfolio	0003_teacher_user	2025-08-21 19:39:53.261038+11
22	portfolio	0004_alter_teacher_photo	2025-08-23 14:48:20.677366+11
23	portfolio	0005_auto_20250823_1544	2025-08-23 15:59:32.567082+11
24	portfolio	0006_merge_20250823_1554	2025-08-23 15:59:32.570002+11
25	portfolio	0009_auto_20250823_1646	2025-08-23 16:48:30.338645+11
26	portfolio	0007_create_views	2025-08-23 16:48:30.363653+11
27	portfolio	0008_teacherexperience_teacherportfolio_teachingquality_and_more	2025-08-23 16:48:30.452015+11
28	portfolio	0010_merge_20250823_1648	2025-08-23 16:48:30.454014+11
\.


--
-- Data for Name: django_session; Type: TABLE DATA; Schema: public; Owner: django_user
--

COPY public.django_session (session_key, session_data, expire_date) FROM stdin;
1s4s3g2rehk4oiw58ulh7uz3p2lcsk9p	.eJxVjDsOwjAQRO_iGln-26GkzxmstXeNA8iR4qRC3J1ESgFTznszbxZhW2vcOi1xQnZlil1-uwT5Se0A-IB2n3me27pMiR8KP2nn44z0up3u30GFXve11EjGq8HJMuwJwRZ0hXIITruM3hibtNPeCpGVsgIokw1GyGKElwjs8wXCqzb8:1up1P6:jSb2WBK5wybQaxwjPGFfEKpCz5iCsOQG52IvFTInSQs	2025-09-04 20:16:16.152289+11
hoskci2int2myvcvzxc61pb0z1kkevgh	.eJxVjEEOwiAQRe_C2hAoIINL9z0DGWZAqoYmpV0Z765NutDtf-_9l4i4rTVuPS9xYnERWpx-t4T0yG0HfMd2myXNbV2mJHdFHrTLceb8vB7u30HFXr-19wmSwWTIsVL6bIrzATRYYx3ZoEIJlth5ByUz2qJ9BhxKgTAYCKTE-wPM4zdm:1uqSXg:_78fLRnQeL7E0qMPvptKMmzKcopEjCAYbra6Z-uvq1Y	2025-09-08 19:27:04.76917+11
\.


--
-- Data for Name: education; Type: TABLE DATA; Schema: public; Owner: django_user
--

COPY public.education (id, teacher_id, institution, specialization, degree, start_date, end_date, education_type, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: experience; Type: TABLE DATA; Schema: public; Owner: django_user
--

COPY public.experience (id, teacher_id, organization, "position", start_date, end_date, experience_type, description, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: files; Type: TABLE DATA; Schema: public; Owner: django_user
--

COPY public.files (id, object_id, file_name, file_path, file_type, file_size, upload_date, description, content_type_id) FROM stdin;
\.


--
-- Data for Name: grades; Type: TABLE DATA; Schema: public; Owner: django_user
--

COPY public.grades (id, student_id, discipline_id, teacher_id, control_type, grade, score, date, description, created_at) FROM stdin;
\.


--
-- Data for Name: groups; Type: TABLE DATA; Schema: public; Owner: django_user
--

COPY public.groups (id, number, specialty, course, admission_year, description, created_at) FROM stdin;
\.


--
-- Data for Name: knowledge_exchange; Type: TABLE DATA; Schema: public; Owner: django_user
--

COPY public.knowledge_exchange (id, teacher_id, event_type, title, event_date, description, role, location, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: olympiads; Type: TABLE DATA; Schema: public; Owner: django_user
--

COPY public.olympiads (id, student_id, teacher_id, name, level, place, year, event_date, description, created_at) FROM stdin;
\.


--
-- Data for Name: publications; Type: TABLE DATA; Schema: public; Owner: django_user
--

COPY public.publications (id, teacher_id, title, type, publisher, year, issn_isbn, url, description, created_at) FROM stdin;
\.


--
-- Data for Name: qualification; Type: TABLE DATA; Schema: public; Owner: django_user
--

COPY public.qualification (id, teacher_id, program, organization, issue_date, hours, certificate_number, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: students; Type: TABLE DATA; Schema: public; Owner: django_user
--

COPY public.students (id, last_name, first_name, middle_name, record_book_number, group_id, admission_date, dismissal_date, status, created_at) FROM stdin;
\.


--
-- Data for Name: teachers; Type: TABLE DATA; Schema: public; Owner: django_user
--

COPY public.teachers (id, last_name, first_name, middle_name, birth_date, email, phone, biography, interests, teaching_problem, photo, category, certification_date, created_at, updated_at, user_id) FROM stdin;
3	Чехонина	Светлана	Арсентьевна	1990-01-01	\N	\N				teacher_photos/IMG_8579_GxazQIv.jpg	No category	\N	2025-08-24 03:29:46.737144	2025-08-24 20:00:40.270555	1
\.


--
-- Data for Name: teaching_load; Type: TABLE DATA; Schema: public; Owner: django_user
--

COPY public.teaching_load (id, teacher_id, discipline_id, group_id, semester, year, lesson_type, hours, study_form, created_at) FROM stdin;
\.


--
-- Name: auth_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: django_user
--

SELECT pg_catalog.setval('public.auth_group_id_seq', 1, false);


--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: django_user
--

SELECT pg_catalog.setval('public.auth_group_permissions_id_seq', 1, false);


--
-- Name: auth_permission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: django_user
--

SELECT pg_catalog.setval('public.auth_permission_id_seq', 100, true);


--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: django_user
--

SELECT pg_catalog.setval('public.auth_user_groups_id_seq', 1, false);


--
-- Name: auth_user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: django_user
--

SELECT pg_catalog.setval('public.auth_user_id_seq', 2, true);


--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: django_user
--

SELECT pg_catalog.setval('public.auth_user_user_permissions_id_seq', 1, false);


--
-- Name: django_admin_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: django_user
--

SELECT pg_catalog.setval('public.django_admin_log_id_seq', 1, false);


--
-- Name: django_content_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: django_user
--

SELECT pg_catalog.setval('public.django_content_type_id_seq', 25, true);


--
-- Name: django_migrations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: django_user
--

SELECT pg_catalog.setval('public.django_migrations_id_seq', 28, true);


--
-- Name: seq_award; Type: SEQUENCE SET; Schema: public; Owner: django_user
--

SELECT pg_catalog.setval('public.seq_award', 1, true);


--
-- Name: seq_coursework; Type: SEQUENCE SET; Schema: public; Owner: django_user
--

SELECT pg_catalog.setval('public.seq_coursework', 1, false);


--
-- Name: seq_diploma; Type: SEQUENCE SET; Schema: public; Owner: django_user
--

SELECT pg_catalog.setval('public.seq_diploma', 1, false);


--
-- Name: seq_discipline; Type: SEQUENCE SET; Schema: public; Owner: django_user
--

SELECT pg_catalog.setval('public.seq_discipline', 1, true);


--
-- Name: seq_education; Type: SEQUENCE SET; Schema: public; Owner: django_user
--

SELECT pg_catalog.setval('public.seq_education', 2, true);


--
-- Name: seq_experience; Type: SEQUENCE SET; Schema: public; Owner: django_user
--

SELECT pg_catalog.setval('public.seq_experience', 1, true);


--
-- Name: seq_file; Type: SEQUENCE SET; Schema: public; Owner: django_user
--

SELECT pg_catalog.setval('public.seq_file', 1, false);


--
-- Name: seq_grade; Type: SEQUENCE SET; Schema: public; Owner: django_user
--

SELECT pg_catalog.setval('public.seq_grade', 1, false);


--
-- Name: seq_group; Type: SEQUENCE SET; Schema: public; Owner: django_user
--

SELECT pg_catalog.setval('public.seq_group', 1, true);


--
-- Name: seq_knowledge_exchange; Type: SEQUENCE SET; Schema: public; Owner: django_user
--

SELECT pg_catalog.setval('public.seq_knowledge_exchange', 1, false);


--
-- Name: seq_olympiad; Type: SEQUENCE SET; Schema: public; Owner: django_user
--

SELECT pg_catalog.setval('public.seq_olympiad', 1, false);


--
-- Name: seq_publication; Type: SEQUENCE SET; Schema: public; Owner: django_user
--

SELECT pg_catalog.setval('public.seq_publication', 1, false);


--
-- Name: seq_qualification; Type: SEQUENCE SET; Schema: public; Owner: django_user
--

SELECT pg_catalog.setval('public.seq_qualification', 1, true);


--
-- Name: seq_student; Type: SEQUENCE SET; Schema: public; Owner: django_user
--

SELECT pg_catalog.setval('public.seq_student', 1, false);


--
-- Name: seq_teacher; Type: SEQUENCE SET; Schema: public; Owner: django_user
--

SELECT pg_catalog.setval('public.seq_teacher', 3, true);


--
-- Name: seq_teaching_load; Type: SEQUENCE SET; Schema: public; Owner: django_user
--

SELECT pg_catalog.setval('public.seq_teaching_load', 1, true);


--
-- Name: auth_group auth_group_name_key; Type: CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_name_key UNIQUE (name);


--
-- Name: auth_group_permissions auth_group_permissions_group_id_permission_id_0cd325b0_uniq; Type: CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id);


--
-- Name: auth_group_permissions auth_group_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_pkey; Type: CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);


--
-- Name: auth_permission auth_permission_content_type_id_codename_01ab375a_uniq; Type: CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename);


--
-- Name: auth_permission auth_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_user_id_group_id_94350c0c_uniq; Type: CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_group_id_94350c0c_uniq UNIQUE (user_id, group_id);


--
-- Name: auth_user auth_user_pkey; Type: CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_permission_id_14a6b632_uniq; Type: CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_permission_id_14a6b632_uniq UNIQUE (user_id, permission_id);


--
-- Name: auth_user auth_user_username_key; Type: CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_username_key UNIQUE (username);


--
-- Name: awards awards_pkey; Type: CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.awards
    ADD CONSTRAINT awards_pkey PRIMARY KEY (id);


--
-- Name: courseworks courseworks_pkey; Type: CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.courseworks
    ADD CONSTRAINT courseworks_pkey PRIMARY KEY (id);


--
-- Name: diplomas diplomas_pkey; Type: CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.diplomas
    ADD CONSTRAINT diplomas_pkey PRIMARY KEY (id);


--
-- Name: disciplines disciplines_pkey; Type: CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.disciplines
    ADD CONSTRAINT disciplines_pkey PRIMARY KEY (id);


--
-- Name: django_admin_log django_admin_log_pkey; Type: CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_pkey PRIMARY KEY (id);


--
-- Name: django_content_type django_content_type_app_label_model_76bd3d3b_uniq; Type: CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model);


--
-- Name: django_content_type django_content_type_pkey; Type: CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);


--
-- Name: django_migrations django_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.django_migrations
    ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);


--
-- Name: django_session django_session_pkey; Type: CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.django_session
    ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);


--
-- Name: education education_pkey; Type: CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.education
    ADD CONSTRAINT education_pkey PRIMARY KEY (id);


--
-- Name: experience experience_pkey; Type: CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.experience
    ADD CONSTRAINT experience_pkey PRIMARY KEY (id);


--
-- Name: files files_pkey; Type: CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.files
    ADD CONSTRAINT files_pkey PRIMARY KEY (id);


--
-- Name: grades grades_pkey; Type: CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.grades
    ADD CONSTRAINT grades_pkey PRIMARY KEY (id);


--
-- Name: groups groups_number_key; Type: CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.groups
    ADD CONSTRAINT groups_number_key UNIQUE (number);


--
-- Name: groups groups_pkey; Type: CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.groups
    ADD CONSTRAINT groups_pkey PRIMARY KEY (id);


--
-- Name: knowledge_exchange knowledge_exchange_pkey; Type: CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.knowledge_exchange
    ADD CONSTRAINT knowledge_exchange_pkey PRIMARY KEY (id);


--
-- Name: olympiads olympiads_pkey; Type: CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.olympiads
    ADD CONSTRAINT olympiads_pkey PRIMARY KEY (id);


--
-- Name: publications publications_pkey; Type: CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.publications
    ADD CONSTRAINT publications_pkey PRIMARY KEY (id);


--
-- Name: qualification qualification_pkey; Type: CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.qualification
    ADD CONSTRAINT qualification_pkey PRIMARY KEY (id);


--
-- Name: students students_pkey; Type: CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.students
    ADD CONSTRAINT students_pkey PRIMARY KEY (id);


--
-- Name: students students_record_book_number_key; Type: CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.students
    ADD CONSTRAINT students_record_book_number_key UNIQUE (record_book_number);


--
-- Name: teachers teachers_email_key; Type: CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.teachers
    ADD CONSTRAINT teachers_email_key UNIQUE (email);


--
-- Name: teachers teachers_pkey; Type: CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.teachers
    ADD CONSTRAINT teachers_pkey PRIMARY KEY (id);


--
-- Name: teachers teachers_user_id_key; Type: CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.teachers
    ADD CONSTRAINT teachers_user_id_key UNIQUE (user_id);


--
-- Name: teaching_load teaching_load_pkey; Type: CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.teaching_load
    ADD CONSTRAINT teaching_load_pkey PRIMARY KEY (id);


--
-- Name: auth_group_name_a6ea08ec_like; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX auth_group_name_a6ea08ec_like ON public.auth_group USING btree (name varchar_pattern_ops);


--
-- Name: auth_group_permissions_group_id_b120cbf9; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions USING btree (group_id);


--
-- Name: auth_group_permissions_permission_id_84c5c92e; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions USING btree (permission_id);


--
-- Name: auth_permission_content_type_id_2f476e4b; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX auth_permission_content_type_id_2f476e4b ON public.auth_permission USING btree (content_type_id);


--
-- Name: auth_user_groups_group_id_97559544; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX auth_user_groups_group_id_97559544 ON public.auth_user_groups USING btree (group_id);


--
-- Name: auth_user_groups_user_id_6a12ed8b; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX auth_user_groups_user_id_6a12ed8b ON public.auth_user_groups USING btree (user_id);


--
-- Name: auth_user_user_permissions_permission_id_1fbb5f2c; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX auth_user_user_permissions_permission_id_1fbb5f2c ON public.auth_user_user_permissions USING btree (permission_id);


--
-- Name: auth_user_user_permissions_user_id_a95ead1b; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX auth_user_user_permissions_user_id_a95ead1b ON public.auth_user_user_permissions USING btree (user_id);


--
-- Name: auth_user_username_6821ab7c_like; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX auth_user_username_6821ab7c_like ON public.auth_user USING btree (username varchar_pattern_ops);


--
-- Name: awards_teacher_7b94fe_idx; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX awards_teacher_7b94fe_idx ON public.awards USING btree (teacher_id, level);


--
-- Name: courseworks_teacher_a0f058_idx; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX courseworks_teacher_a0f058_idx ON public.courseworks USING btree (teacher_id, discipline_id);


--
-- Name: diplomas_supervi_701af0_idx; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX diplomas_supervi_701af0_idx ON public.diplomas USING btree (supervisor_id);


--
-- Name: django_admin_log_content_type_id_c4bce8eb; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX django_admin_log_content_type_id_c4bce8eb ON public.django_admin_log USING btree (content_type_id);


--
-- Name: django_admin_log_user_id_c564eba6; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX django_admin_log_user_id_c564eba6 ON public.django_admin_log USING btree (user_id);


--
-- Name: django_session_expire_date_a5c62663; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX django_session_expire_date_a5c62663 ON public.django_session USING btree (expire_date);


--
-- Name: django_session_session_key_c0390e0f_like; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX django_session_session_key_c0390e0f_like ON public.django_session USING btree (session_key varchar_pattern_ops);


--
-- Name: education_teacher_67e856_idx; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX education_teacher_67e856_idx ON public.education USING btree (teacher_id);


--
-- Name: experience_teacher_42645d_idx; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX experience_teacher_42645d_idx ON public.experience USING btree (teacher_id, start_date, end_date);


--
-- Name: files_content_54cb22_idx; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX files_content_54cb22_idx ON public.files USING btree (content_type_id, object_id);


--
-- Name: files_content_type_id_14133505; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX files_content_type_id_14133505 ON public.files USING btree (content_type_id);


--
-- Name: grades_student_de0e76_idx; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX grades_student_de0e76_idx ON public.grades USING btree (student_id, discipline_id, teacher_id);


--
-- Name: idx_award_level; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX idx_award_level ON public.awards USING btree (level);


--
-- Name: idx_award_teacher; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX idx_award_teacher ON public.awards USING btree (teacher_id);


--
-- Name: idx_coursework_teacher; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX idx_coursework_teacher ON public.courseworks USING btree (teacher_id);


--
-- Name: idx_diploma_supervisor; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX idx_diploma_supervisor ON public.diplomas USING btree (supervisor_id);


--
-- Name: idx_education_teacher; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX idx_education_teacher ON public.education USING btree (teacher_id);


--
-- Name: idx_experience_dates; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX idx_experience_dates ON public.experience USING btree (start_date, end_date);


--
-- Name: idx_experience_teacher; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX idx_experience_teacher ON public.experience USING btree (teacher_id);


--
-- Name: idx_grade_discipline; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX idx_grade_discipline ON public.grades USING btree (discipline_id);


--
-- Name: idx_grade_teacher; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX idx_grade_teacher ON public.grades USING btree (teacher_id);


--
-- Name: idx_knowledge_exchange_date; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX idx_knowledge_exchange_date ON public.knowledge_exchange USING btree (event_date);


--
-- Name: idx_knowledge_exchange_teacher; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX idx_knowledge_exchange_teacher ON public.knowledge_exchange USING btree (teacher_id);


--
-- Name: idx_olympiad_teacher; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX idx_olympiad_teacher ON public.olympiads USING btree (teacher_id);


--
-- Name: idx_publication_teacher; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX idx_publication_teacher ON public.publications USING btree (teacher_id);


--
-- Name: idx_qualification_teacher; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX idx_qualification_teacher ON public.qualification USING btree (teacher_id);


--
-- Name: idx_student_group; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX idx_student_group ON public.students USING btree (group_id);


--
-- Name: idx_teacher_name; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX idx_teacher_name ON public.teachers USING btree (last_name, first_name);


--
-- Name: idx_teaching_load_discipline; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX idx_teaching_load_discipline ON public.teaching_load USING btree (discipline_id);


--
-- Name: idx_teaching_load_teacher; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX idx_teaching_load_teacher ON public.teaching_load USING btree (teacher_id);


--
-- Name: knowledge_e_teacher_dbaeec_idx; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX knowledge_e_teacher_dbaeec_idx ON public.knowledge_exchange USING btree (teacher_id, event_date);


--
-- Name: olympiads_teacher_4311d5_idx; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX olympiads_teacher_4311d5_idx ON public.olympiads USING btree (teacher_id, level);


--
-- Name: publication_teacher_55af21_idx; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX publication_teacher_55af21_idx ON public.publications USING btree (teacher_id);


--
-- Name: qualificati_teacher_600762_idx; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX qualificati_teacher_600762_idx ON public.qualification USING btree (teacher_id);


--
-- Name: students_group_i_234511_idx; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX students_group_i_234511_idx ON public.students USING btree (group_id);


--
-- Name: teachers_last_na_0e6b74_idx; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX teachers_last_na_0e6b74_idx ON public.teachers USING btree (last_name, first_name);


--
-- Name: teaching_lo_teacher_435b98_idx; Type: INDEX; Schema: public; Owner: django_user
--

CREATE INDEX teaching_lo_teacher_435b98_idx ON public.teaching_load USING btree (teacher_id, discipline_id, group_id);


--
-- Name: teacher_experience _RETURN; Type: RULE; Schema: public; Owner: django_user
--

CREATE OR REPLACE VIEW public.teacher_experience AS
 SELECT t.id AS teacher_id,
    (((t.last_name)::text || ' '::text) || (t.first_name)::text) AS fio,
    sum(EXTRACT(year FROM age((COALESCE(e.end_date, CURRENT_DATE))::timestamp with time zone, (e.start_date)::timestamp with time zone))) FILTER (WHERE ((e.experience_type)::text = 'General'::text)) AS general_experience,
    sum(EXTRACT(year FROM age((COALESCE(e.end_date, CURRENT_DATE))::timestamp with time zone, (e.start_date)::timestamp with time zone))) FILTER (WHERE ((e.experience_type)::text = 'Education'::text)) AS education_experience,
    sum(EXTRACT(year FROM age((COALESCE(e.end_date, CURRENT_DATE))::timestamp with time zone, (e.start_date)::timestamp with time zone))) FILTER (WHERE ((e.experience_type)::text = 'College'::text)) AS college_experience
   FROM (public.teachers t
     LEFT JOIN public.experience e ON ((t.id = e.teacher_id)))
  GROUP BY t.id;


--
-- Name: teaching_quality _RETURN; Type: RULE; Schema: public; Owner: django_user
--

CREATE OR REPLACE VIEW public.teaching_quality AS
 SELECT t.id AS teacher_id,
    (((t.last_name)::text || ' '::text) || (t.first_name)::text) AS fio,
    d.name AS discipline,
    g.number AS group_number,
    tl.year,
    tl.semester,
    round(avg(gr.grade), 2) AS average_grade,
    count(gr.id) AS grade_count,
    (((count(
        CASE
            WHEN (gr.grade = 5) THEN 1
            ELSE NULL::integer
        END))::numeric * 100.0) / (count(gr.id))::numeric) AS percent_excellent
   FROM ((((public.teachers t
     JOIN public.teaching_load tl ON ((t.id = tl.teacher_id)))
     JOIN public.disciplines d ON ((tl.discipline_id = d.id)))
     JOIN public.groups g ON ((tl.group_id = g.id)))
     JOIN public.grades gr ON (((gr.discipline_id = d.id) AND (gr.teacher_id = t.id))))
  GROUP BY t.id, d.name, g.number, tl.year, tl.semester;


--
-- Name: awards trg_award_update; Type: TRIGGER; Schema: public; Owner: django_user
--

CREATE TRIGGER trg_award_update BEFORE UPDATE ON public.awards FOR EACH ROW EXECUTE FUNCTION public.update_modified_at();


--
-- Name: education trg_education_update; Type: TRIGGER; Schema: public; Owner: django_user
--

CREATE TRIGGER trg_education_update BEFORE UPDATE ON public.education FOR EACH ROW EXECUTE FUNCTION public.update_modified_at();


--
-- Name: experience trg_experience_update; Type: TRIGGER; Schema: public; Owner: django_user
--

CREATE TRIGGER trg_experience_update BEFORE UPDATE ON public.experience FOR EACH ROW EXECUTE FUNCTION public.update_modified_at();


--
-- Name: knowledge_exchange trg_knowledge_exchange_update; Type: TRIGGER; Schema: public; Owner: django_user
--

CREATE TRIGGER trg_knowledge_exchange_update BEFORE UPDATE ON public.knowledge_exchange FOR EACH ROW EXECUTE FUNCTION public.update_modified_at();


--
-- Name: qualification trg_qualification_update; Type: TRIGGER; Schema: public; Owner: django_user
--

CREATE TRIGGER trg_qualification_update BEFORE UPDATE ON public.qualification FOR EACH ROW EXECUTE FUNCTION public.update_modified_at();


--
-- Name: teachers trg_teacher_update; Type: TRIGGER; Schema: public; Owner: django_user
--

CREATE TRIGGER trg_teacher_update BEFORE UPDATE ON public.teachers FOR EACH ROW EXECUTE FUNCTION public.update_modified_at();


--
-- Name: experience trg_validate_experience; Type: TRIGGER; Schema: public; Owner: django_user
--

CREATE TRIGGER trg_validate_experience BEFORE INSERT OR UPDATE ON public.experience FOR EACH ROW EXECUTE FUNCTION public.validate_experience_dates();


--
-- Name: auth_group_permissions auth_group_permissio_permission_id_84c5c92e_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissions_group_id_b120cbf9_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_permission auth_permission_content_type_id_2f476e4b_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_group_id_97559544_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_group_id_97559544_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_user_id_6a12ed8b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_6a12ed8b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: awards awards_teacher_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.awards
    ADD CONSTRAINT awards_teacher_id_fkey FOREIGN KEY (teacher_id) REFERENCES public.teachers(id) ON DELETE CASCADE;


--
-- Name: courseworks courseworks_discipline_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.courseworks
    ADD CONSTRAINT courseworks_discipline_id_fkey FOREIGN KEY (discipline_id) REFERENCES public.disciplines(id);


--
-- Name: courseworks courseworks_student_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.courseworks
    ADD CONSTRAINT courseworks_student_id_fkey FOREIGN KEY (student_id) REFERENCES public.students(id) ON DELETE CASCADE;


--
-- Name: courseworks courseworks_teacher_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.courseworks
    ADD CONSTRAINT courseworks_teacher_id_fkey FOREIGN KEY (teacher_id) REFERENCES public.teachers(id);


--
-- Name: diplomas diplomas_student_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.diplomas
    ADD CONSTRAINT diplomas_student_id_fkey FOREIGN KEY (student_id) REFERENCES public.students(id) ON DELETE CASCADE;


--
-- Name: diplomas diplomas_supervisor_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.diplomas
    ADD CONSTRAINT diplomas_supervisor_id_fkey FOREIGN KEY (supervisor_id) REFERENCES public.teachers(id);


--
-- Name: django_admin_log django_admin_log_content_type_id_c4bce8eb_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_user_id_c564eba6_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: education education_teacher_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.education
    ADD CONSTRAINT education_teacher_id_fkey FOREIGN KEY (teacher_id) REFERENCES public.teachers(id) ON DELETE CASCADE;


--
-- Name: experience experience_teacher_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.experience
    ADD CONSTRAINT experience_teacher_id_fkey FOREIGN KEY (teacher_id) REFERENCES public.teachers(id) ON DELETE CASCADE;


--
-- Name: files files_content_type_id_14133505_fk_django_content_type_id; Type: FK CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.files
    ADD CONSTRAINT files_content_type_id_14133505_fk_django_content_type_id FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: grades grades_discipline_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.grades
    ADD CONSTRAINT grades_discipline_id_fkey FOREIGN KEY (discipline_id) REFERENCES public.disciplines(id) ON DELETE CASCADE;


--
-- Name: grades grades_student_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.grades
    ADD CONSTRAINT grades_student_id_fkey FOREIGN KEY (student_id) REFERENCES public.students(id) ON DELETE CASCADE;


--
-- Name: grades grades_teacher_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.grades
    ADD CONSTRAINT grades_teacher_id_fkey FOREIGN KEY (teacher_id) REFERENCES public.teachers(id);


--
-- Name: knowledge_exchange knowledge_exchange_teacher_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.knowledge_exchange
    ADD CONSTRAINT knowledge_exchange_teacher_id_fkey FOREIGN KEY (teacher_id) REFERENCES public.teachers(id) ON DELETE CASCADE;


--
-- Name: olympiads olympiads_student_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.olympiads
    ADD CONSTRAINT olympiads_student_id_fkey FOREIGN KEY (student_id) REFERENCES public.students(id) ON DELETE CASCADE;


--
-- Name: olympiads olympiads_teacher_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.olympiads
    ADD CONSTRAINT olympiads_teacher_id_fkey FOREIGN KEY (teacher_id) REFERENCES public.teachers(id);


--
-- Name: publications publications_teacher_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.publications
    ADD CONSTRAINT publications_teacher_id_fkey FOREIGN KEY (teacher_id) REFERENCES public.teachers(id) ON DELETE CASCADE;


--
-- Name: qualification qualification_teacher_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.qualification
    ADD CONSTRAINT qualification_teacher_id_fkey FOREIGN KEY (teacher_id) REFERENCES public.teachers(id) ON DELETE CASCADE;


--
-- Name: students students_group_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.students
    ADD CONSTRAINT students_group_id_fkey FOREIGN KEY (group_id) REFERENCES public.groups(id);


--
-- Name: teachers teachers_user_id_6fdcda53_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.teachers
    ADD CONSTRAINT teachers_user_id_6fdcda53_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: teaching_load teaching_load_discipline_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.teaching_load
    ADD CONSTRAINT teaching_load_discipline_id_fkey FOREIGN KEY (discipline_id) REFERENCES public.disciplines(id) ON DELETE CASCADE;


--
-- Name: teaching_load teaching_load_group_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.teaching_load
    ADD CONSTRAINT teaching_load_group_id_fkey FOREIGN KEY (group_id) REFERENCES public.groups(id) ON DELETE CASCADE;


--
-- Name: teaching_load teaching_load_teacher_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: django_user
--

ALTER TABLE ONLY public.teaching_load
    ADD CONSTRAINT teaching_load_teacher_id_fkey FOREIGN KEY (teacher_id) REFERENCES public.teachers(id) ON DELETE CASCADE;


--
-- PostgreSQL database dump complete
--

\unrestrict bxV0qu5Xa9RhiC2uh5A38gzF3bDtUeLW5CU0aAXviavdbEHfTstEFK9f7km6Rgm

